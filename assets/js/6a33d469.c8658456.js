"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[4689],{9743:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"full-stack-interview-question","metadata":{"permalink":"/notes/blog/full-stack-interview-question","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-05-fullstack-interview-question/index.mdx","source":"@site/blog/2022-12-05-fullstack-interview-question/index.mdx","title":"Full stack Interview Question","description":"Full Stack Interview Question Topic","date":"2022-12-05T00:00:00.000Z","formattedDate":"December 5, 2022","tags":[{"label":"frontend","permalink":"/notes/blog/tags/frontend"},{"label":"project","permalink":"/notes/blog/tags/project"},{"label":"reactjs","permalink":"/notes/blog/tags/reactjs"},{"label":"nextjs","permalink":"/notes/blog/tags/nextjs"},{"label":"process","permalink":"/notes/blog/tags/process"},{"label":"interview","permalink":"/notes/blog/tags/interview"},{"label":"question","permalink":"/notes/blog/tags/question"}],"readingTime":6.48,"truncated":false,"authors":[{"name":"Nguy\u1ec5n L\xea Phong","title":"Admin","url":"https://nguyenlephong.github.io","imageURL":"https://cdn.jsdelivr.net/gh/nguyenlephong/dom-pub/shared/images/cv/images/dom.png","key":"nguyenlephong"}],"frontMatter":{"slug":"full-stack-interview-question","title":"Full stack Interview Question","authors":["nguyenlephong"],"tags":["frontend","project","reactjs","nextjs","process","interview","question"]},"nextItem":{"title":"Front end Interview Question","permalink":"/notes/blog/front-end-interview-question"}},"content":":::tip\\n\\nFull Stack Interview Question Topic\\n- Mindset/Communication\\n- Experiences\\n- Computer Science\\n- Coding Skill\\n- Javascript\\n- ReactJS\\n- NodeJS\\n- Java\\n- Python\\n- Devops\\n- Principle\\n- Data Structure\\n\\n:::\\n\\n# Stack\\n## Mindset/Communication Interview Question\\n- Why do you want to be a developer?\\n- How Software Engineers/Developers and Coders are different?\\n- Tell a past story where you resolve conflicts between you and colleges.\\n- What are your favorite books/courses/papers to self-learn?\\n- What do you hope to learn from working in my company?\\n- What are your hobbies outside of works?\\n\\n## Experience Interview Question\\n- What are the activities in your most typical work days?\\n- What is the most fascinated problems that you solved; or what is your proudest project?\\n\\n## Javascript Interview Question\\n- Difference between promise and callback?\\n- Difference between event bubbling and capturing?\\n- Difference between callback and closure in JavaScript?\\n- Difference between Debounce and throttle in JavaScript?\\n- Difference between deep copy and shallow copy in JavaScript?\\n- Difference between null and undefined in JavaScript?\\n- Difference between == and === operator in JavaScript?\\n- What are Hoisting?\\n- What are closure?\\n- What are Immediately-invoked Function Expressions (IIFE)?\\n- Tr\xecnh b\xe0y c\xe1c t\xednh n\u0103ng c\u1ee7a ES6?\\n- Is Encoding the same as Escaping?\\n- A Primer on the Different Types of Browser Storage?\\n- What is \u2018this\u2019 keyword in JavaScript?\\n- What would be the result of 3+2+\u201d7\u2033?\\n- What is unescape() and escape() functions?\\n- What are the decodeURI() and encodeURI()?\\n- What is the difference between .call() and .apply()?\\n- How can JavaScript codes be hidden from old browsers that do not support JavaScript?\\n- Explain the binding behavior of this keyword.\\n- Explain how inheritance in JavaScript works? (How is it different from other OOP languages like Java)\\n- What are the different types of errors in JavaScript?\\n\\n:::info What are the different types of errors in JavaScript?\\nThere are three types of errors:\\n\\n- Load time errors: Errors that come up when loading a web page, like improper syntax errors, are known as Load time errors and generate the errors dynamically.\\n- Runtime errors: Errors that come due to misuse of the command inside the HTML language.\\n- Logical errors: These are the errors that occur due to the bad logic performed on a function with a different operation.\\n\\n:::\\n\\n- What are the various functional components in JavaScript?\\n\\n:::info What are the various functional components in JavaScript?\\nThe different functional components in JavaScript are\\n\\n- First-class functions: Functions in JavaScript are utilized as first-class objects. This usually means that these functions can be passed as arguments to other functions, returned as values from other functions, assigned to variables, or can also be stored in data structures.\\n- Nested functions: The functions, which are defined inside other functions, are called Nested functions. They are called \u2018every time the main function is invoked.\\n\\n:::\\n\\n\\n\\n## ReactJS Interview Question\\n- What are synthetic events in React?\\n- What\u2019s the difference between super() and super(props) in React?\\n- How do you build an npm package?\\n- Compare function component to class component?\\n- Tr\xecnh b\xe0y c\xe1c lifecycle trong React Component?\\n- What are Higher-Order components?\\n- What do you know about controlled and uncontrolled components?\\n- What are Pure Components?\\n- What is dynamic import?\\n\\n## UI Framework Interview Question\\n- B\u1ea1n bi\u1ebft nh\u1eefng preprocessor n\xe0o?\\n- Tr\xecnh b\xe0y c\xe1c Psuedo class trong CSS m\xe0 b\u1ea1n bi\u1ebft?\\n- B\u1ea1n \u0111\xe3 bi\u1ebft nh\u1eefng UI lib/framework n\xe0o\\n\\n## NodeJS Interview Question\\n\\n## Computer Science Interview Question\\n- What are tail-calls optimization?\\n- What is the difference between Process and Thread?\\n\\n:::tip\\n- [EN - What is the difference between Process and Thread?](https://www.javatpoint.com/process-vs-thread)\\n- [VI - What is the difference between Process and Thread?](https://cloudgeeks.net/thread-va-process)\\nThe process and thread are an independent sequence of execution, but both are differentiated in a way that processes execute in different memory spaces, whereas threads of the same process execute in shared memory space.\\n- A process in OS can remain in any of the following states:\\n\\n```\\nNEW: A new process is being created.\\nREADY: A process is ready and waiting to be allocated to a processor.\\nRUNNING: The program is being executed.\\nWAITING: Waiting for some event to happen or occur.\\nTERMINATED: Execution finished.\\n```\\n:::\\n\\n- Explain Recursive.\\n- Explain the \u201cBig O\u201d concept\\n- What is the difference between Stack and Heap?\\n- How would you implement a hash table?\\n- What are the fundamental differences between Arrays and Linked Lists? When to use which?\\n\\n## Database Interview Question\\n- Explain index in RDBMS ? Why do we need index, advantages and disadvantages?\\n- What is transaction ? Explain Transaction Isolation Levels in DBMS ?\\n\\n- Coding skill\\n- When do you need to violate DRY?\\n- Difference between Terminal and Shell?\\n- Difference between git merge and git rebase?\\n- Assess: Are they fluent in their primary programming languages?\\n- Assess: Are they proficient in their day-to-day tools (IDE, text editors, shells, etc.)?\\n\\n\\n## [Network Interview Question](https://www.interviewbit.com/networking-interview-questions)\\n- What happens when you type a URL into your browser?\\n- HTTP Request/Response c\xf3 c\u1ea5u tr\xfac th\u1ebf n\xe0o?\\n- What is the difference between HTTP v1 and HTTP v2?\\n- What is the difference between HTTP and HTTPS?\\n- What is the difference between TCP and UDP?\\n- What is the difference between SSL and TLS?\\n- HTTP ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\xe0o?\\n- Explain what\u2019s an HTTP Session.\\n\\n## Python Interview Question\\n- The difference between \\"class Foo\\" and \\"class Foo(object)\\"\\n- Can you manipulate functions as first-class objects?\\n- What are \\"special\\" methods (`<foo>`), how they work, etc\\n- Why is the GIL important? (This actually puzzles me, don\'t know the answer)\\n- What\'s wrong with import all?\\n- How to avoid cyclical imports without having to resort to imports in functions?\\n- The with statement and its usage.\\n- Tell me a few differences between Python 2.x and 3.x?\\n- Do you know the difference between range and xrange?\\n- Do you know what is the difference between lists and tuples? Can you give me an example for their usage?\\n- Show me three different ways of fetching every third item in the list\\n- Do you know what list and dict comprehensions are? Can you give an example?\\n- How are arguments passed \u2013 by reference of by value? (easy, but not that easy, I\'m not sure if I can answer this clearly)\\n- What is PEP8 and do you follow its guidelines when you\'re coding?\\n- How would you setup many projects where each one uses different versions of Python and third party libraries?\\n- What are Python decorators and how would you use them?\\n\\n\\n## Devops Interview Question\\n- IP resources planning for multiple K8s Clusters\\n- Planning for Production resources (CPU, RAM, Storage, Network)\\n- Design a monitoring dashboard (Grafana, Datadogs, etc \u2026) to oversee a K8s cluster, what\u2019s the most important metrics, how are they related and why?\\n- Describe components of a Monitoring/Alerting/Logging system to integrate to a brand new K8s cluster\\n- Design multi-tenancy environment in K8s without additional tools\\n- You are forced by your boss to reduce the cost of a K8s cluster, what would you plan to do and how would you execute it.\\n\\n## Java Interview Question\\n- What does Garbage Collector for?\\n- How do ClassLoaders work?\\n- What is the difference between synchronized methods and synchronized blocks?\\n- Why do we need ThreadPool?\\n- Explain context-switching phenomena\\n- What is ThreadLocal?\\n- Why string is immutable in Java ? List some of advantages?\\n- What Object#hashCode() and Object#equals() are for?\\n- What Object#wait() and Object#notify() are for?\\n\\n[Website](https://nguyenlephong.github.io/)"},{"id":"front-end-interview-question","metadata":{"permalink":"/notes/blog/front-end-interview-question","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-03-frontend-interview-question/index.mdx","source":"@site/blog/2022-12-03-frontend-interview-question/index.mdx","title":"Front end Interview Question","description":"Front End Interview Question Topic","date":"2022-12-03T00:00:00.000Z","formattedDate":"December 3, 2022","tags":[{"label":"frontend","permalink":"/notes/blog/tags/frontend"},{"label":"project","permalink":"/notes/blog/tags/project"},{"label":"reactjs","permalink":"/notes/blog/tags/reactjs"},{"label":"nextjs","permalink":"/notes/blog/tags/nextjs"},{"label":"process","permalink":"/notes/blog/tags/process"},{"label":"interview","permalink":"/notes/blog/tags/interview"},{"label":"question","permalink":"/notes/blog/tags/question"}],"readingTime":6.205,"truncated":false,"authors":[{"name":"Nguy\u1ec5n L\xea Phong","title":"Admin","url":"https://nguyenlephong.github.io","imageURL":"https://cdn.jsdelivr.net/gh/nguyenlephong/dom-pub/shared/images/cv/images/dom.png","key":"nguyenlephong"}],"frontMatter":{"slug":"front-end-interview-question","title":"Front end Interview Question","authors":["nguyenlephong"],"tags":["frontend","project","reactjs","nextjs","process","interview","question"]},"prevItem":{"title":"Full stack Interview Question","permalink":"/notes/blog/full-stack-interview-question"},"nextItem":{"title":"Frontend Project","permalink":"/notes/blog/frontend-project"}},"content":":::tip\\n\\nFront End Interview Question Topic\\n- Javascript\\n- ReactJS\\n- NodeJS\\n- Network\\n- Principle\\n- Data Structure\\n\\n:::\\n\\n# Stack\\n## Mindset/Communication Interview Question\\n### Why do you want to be a developer?\\n### How Software Engineers/Developers and Coders are different?\\n### Tell a past story where you resolve conflicts between you and colleges.\\n### What are your favorite books/courses/papers to self-learn?\\n### What do you hope to learn from working in my company?\\n### What are your hobbies outside of works?\\n\\n## Experience Interview Question\\n### What are the activities in your most typical work days?\\n### What is the most fascinated problems that you solved; or what is your proudest project?\\n\\n## Javascript Interview Question\\n### Difference between promise and callback?\\n### Difference between event bubbling and capturing?\\n### Difference between callback and closure in JavaScript?\\n### Difference between Debounce and throttle in JavaScript?\\n### Difference between deep copy and shallow copy in JavaScript?\\n### Difference between null and undefined in JavaScript?\\n### Difference between == and === operator in JavaScript?\\n### What are Hoisting?\\n### What are closure?\\n### What are Immediately-invoked Function Expressions (IIFE)?\\n### Tr\xecnh b\xe0y c\xe1c t\xednh n\u0103ng c\u1ee7a ES6?\\n### Is Encoding the same as Escaping?\\n### A Primer on the Different Types of Browser Storage?\\n### What is \u2018this\u2019 keyword in JavaScript?\\n### What would be the result of 3+2+\u201d7\u2033?\\n### What is unescape() and escape() functions?\\n### What are the decodeURI() and encodeURI()?\\n### What is the difference between .call() and .apply()?\\n### How can JavaScript codes be hidden from old browsers that do not support JavaScript?\\n### Explain the binding behavior of this keyword.\\n### Explain how inheritance in JavaScript works? (How is it different from other OOP languages like Java)\\n### What are the different types of errors in JavaScript?\\n\\n:::info What are the different types of errors in JavaScript?\\nThere are three types of errors:\\n\\n- Load time errors: Errors that come up when loading a web page, like improper syntax errors, are known as Load time errors and generate the errors dynamically.\\n- Runtime errors: Errors that come due to misuse of the command inside the HTML language.\\n- Logical errors: These are the errors that occur due to the bad logic performed on a function with a different operation.\\n\\n:::\\n\\n### What are the various functional components in JavaScript?\\n\\n:::info What are the various functional components in JavaScript?\\nThe different functional components in JavaScript are\\n\\n- First-class functions: Functions in JavaScript are utilized as first-class objects. This usually means that these functions can be passed as arguments to other functions, returned as values from other functions, assigned to variables, or can also be stored in data structures.\\n- Nested functions: The functions, which are defined inside other functions, are called Nested functions. They are called \u2018every time the main function is invoked.\\n\\n:::\\n\\n\\n\\n## ReactJS Interview Question\\n### What are synthetic events in React?\\n### What\u2019s the difference between super() and super(props) in React?\\n### How do you build an npm package?\\n### Compare function component to class component?\\n### Tr\xecnh b\xe0y c\xe1c lifecycle trong React Component?\\n### What are Higher-Order components?\\n### What do you know about controlled and uncontrolled components?\\n### What are Pure Components?\\n### What is code-splitting?\\n\\n:::tip\\n### What is code-splitting?\\nBundling is great, but as your app grows, your bundle will grow too. Especially if you are including large third-party libraries. You need to keep an eye on the code you are including in your bundle so that you don\u2019t accidentally make it so large that your app takes a long time to load.\\n\\nTo avoid winding up with a large bundle, it\u2019s good to get ahead of the problem and start \u201csplitting\u201d your bundle. Code-Splitting is a feature supported by bundlers like Webpack, Rollup and Browserify (via factor-bundle) which can create multiple bundles that can be dynamically loaded at runtime.\\n\\nCode-splitting your app can help you \u201clazy-load\u201d just the things that are currently needed by the user, which can dramatically improve the performance of your app. While you haven\u2019t reduced the overall amount of code in your app, you\u2019ve avoided loading code that the user may never need, and reduced the amount of code needed during the initial load.\\n\\n* Refs: https://reactjs.org/docs/code-splitting.html\\n:::\\n\\n### What is dynamic import?\\n\\n:::tip\\n### What is dynamic import?\\nReact.lazy takes a function that must call a dynamic import(). This must return a Promise which resolves to a module with a default export containing a React component.\\n\\nThe lazy component should then be rendered inside a Suspense component, which allows us to show some fallback content (such as a loading indicator) while we\u2019re waiting for the lazy component to load.\\n\\n\\n#### Avoid fallback\\nAny component may suspend as a result of rendering, even components that were already shown to the user. In order for screen content to always be consistent, if an already shown component suspends, React has to hide its tree up to the closest `<Suspense>` boundary. However, from the user\u2019s perspective, this can be disorienting.\\n\\nHowever, sometimes this user experience is not desirable. In particular, it is sometimes better to show the \u201cold\u201d UI while the new UI is being prepared. ==> Using startTransition to fixed it\\n\\n* Refs: https://reactjs.org/docs/code-splitting.html\\n:::\\n\\n## UI Framework Interview Question\\n### B\u1ea1n bi\u1ebft nh\u1eefng preprocessor n\xe0o?\\n### Tr\xecnh b\xe0y c\xe1c Psuedo class trong CSS m\xe0 b\u1ea1n bi\u1ebft?\\n### B\u1ea1n \u0111\xe3 bi\u1ebft nh\u1eefng UI lib/framework n\xe0o\\n\\n## NodeJS Interview Question\\n\\n## Computer Science Interview Question\\n### What are tail-calls optimization?\\n### What is the difference between Process and Thread?\\n\\n:::tip\\n### [EN - What is the difference between Process and Thread?](https://www.javatpoint.com/process-vs-thread)\\n### [VI - What is the difference between Process and Thread?](https://cloudgeeks.net/thread-va-process)\\nThe process and thread are an independent sequence of execution, but both are differentiated in a way that processes execute in different memory spaces, whereas threads of the same process execute in shared memory space.\\n- A process in OS can remain in any of the following states:\\n\\n```\\nNEW: A new process is being created.\\nREADY: A process is ready and waiting to be allocated to a processor.\\nRUNNING: The program is being executed.\\nWAITING: Waiting for some event to happen or occur.\\nTERMINATED: Execution finished.\\n```\\n:::\\n\\n### Explain Recursive.\\n### Explain the \u201cBig O\u201d concept\\n### What is the difference between Stack and Heap?\\n### How would you implement a hash table?\\n### What are the fundamental differences between Arrays and Linked Lists? When to use which?\\n\\n## Database Interview Question\\n### Explain index in RDBMS ? Why do we need index, advantages and disadvantages?\\n### What is transaction ? Explain Transaction Isolation Levels in DBMS ?\\n\\n## Coding skill\\n### When do you need to violate DRY?\\n### Difference between Terminal and Shell?\\n### Difference between git merge and git rebase?\\n### Assess: Are they fluent in their primary programming languages?\\n### Assess: Are they proficient in their day-to-day tools (IDE, text editors, shells, etc.)?\\n\\n\\n## [Network Interview Question](https://www.interviewbit.com/networking-interview-questions)\\n### What happens when you type a URL into your browser?\\n### HTTP Request/Response c\xf3 c\u1ea5u tr\xfac th\u1ebf n\xe0o?\\n### What is the difference between HTTP v1 and HTTP v2?\\n### What is the difference between HTTP and HTTPS?\\n### What is the difference between TCP and UDP?\\n### What is the difference between SSL and TLS?\\n### HTTP ho\u1ea1t \u0111\u1ed9ng nh\u01b0 th\u1ebf n\xe0o?\\n### Explain what\u2019s an HTTP Session.\\n\\n\\n[Website](https://nguyenlephong.github.io/)"},{"id":"frontend-project","metadata":{"permalink":"/notes/blog/frontend-project","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-11-20-frontend-project/index.md","source":"@site/blog/2022-11-20-frontend-project/index.md","title":"Frontend Project","description":"Youtube Channel - Playlist series","date":"2022-11-20T00:00:00.000Z","formattedDate":"November 20, 2022","tags":[{"label":"frontend","permalink":"/notes/blog/tags/frontend"},{"label":"project","permalink":"/notes/blog/tags/project"},{"label":"reactjs","permalink":"/notes/blog/tags/reactjs"},{"label":"nextjs","permalink":"/notes/blog/tags/nextjs"},{"label":"process","permalink":"/notes/blog/tags/process"}],"readingTime":0.965,"truncated":false,"authors":[{"name":"Nguy\u1ec5n L\xea Phong","title":"Admin","url":"https://nguyenlephong.github.io","imageURL":"https://cdn.jsdelivr.net/gh/nguyenlephong/dom-pub/shared/images/cv/images/dom.png","key":"nguyenlephong"}],"frontMatter":{"slug":"frontend-project","title":"Frontend Project","authors":["nguyenlephong"],"tags":["frontend","project","reactjs","nextjs","process"]},"prevItem":{"title":"Front end Interview Question","permalink":"/notes/blog/front-end-interview-question"}},"content":":::tip\\n\\nYoutube Channel - Playlist series\\n\\n<button onClick={() => window.open(\'https://www.youtube.com/playlist?list=PLVFtgMtSD4-cObhGOM8MSVrVHYl7pcC1V\')}>Click me!</button>\\n\\n:::\\n\\n## Ki\u1ebfn th\u1ee9c:\\n+ N\u1eafm \u0111\u01b0\u1ee3c quy tr\xecnh ph\xe1t tri\u1ec3n d\u1ef1 \xe1n ph\u1ea7n m\u1ec1m\\n+ Ho\xe0n th\xe0nh c\xe1c s\u01a1 \u0111\u1ed3, design, file b\xe1o c\xe1o, source code d\u1ef1 \xe1n\\n+ X\xe2y d\u1ef1ng \u1ee9ng d\u1ee5ng giao ti\u1ebfp b\u1eb1ng ReactJs\\n+ X\xe2y d\u1ef1ng \u1ee9ng d\u1ee5ng web admin dashboard b\u1eb1ng NextJS\\n\\n## K\u1ef9 n\u0103ng:\\n+ S\u1eed d\u1ee5ng t\u1ed1t c\xe1c c\xe1ch khai b\xe1o bi\u1ebfn, ph\u1ea1m vi c\u1ee7a bi\u1ebfn, ki\u1ec3u d\u1eef li\u1ec7u, chuy\u1ec3n ki\u1ec3u d\u1eef li\u1ec7u v\xe0 c\xe1c lo\u1ea1i to\xe1n t\u1eed trong l\u1eadp tr\xecnh Typescript/ Javascript ;\\n+ Thao t\xe1c v\xe0 x\u1eed l\xfd th\xe0nh th\u1ea1o v\u1edbi m\u1ea3ng, object trong Javascript;\\n+ S\u1eed d\u1ee5ng th\xe0nh th\u1ea1o c\xe1c c\xe2u l\u1ec7nh \u0111i\u1ec1u ki\u1ec7n, r\u1ebd nh\xe1nh, l\u1ec7nh l\u1ef1a ch\u1ecdn, v\xe0 c\xe1c lo\u1ea1i v\xf2ng l\u1eb7p trong javascript;\\n+ \xc1p d\u1ee5ng ki\u1ebfn th\u1ee9c v\u1ec1 framework NextJS \u0111\u1ec3 x\xe2y d\u1ef1ng d\u1ef1 \xe1n\\n+ S\u1eed d\u1ee5ng material ui\\n+ \xc1p d\u1ee5ng ki\u1ebfn th\u1ee9c v\u1ec1 library Reactjs\\n+ S\u1eed d\u1ee5ng styled components ( ho\u1eb7c tailwind css )\\n+ S\u1eed d\u1ee5ng redux/redux-toolkit\\n+ S\u1eed d\u1ee5ng JWT \u0111\u1ec3 authentication/authorization\\n+ S\u1eed d\u1ee5ng Firebase \u0111\u1ec3 l\xe0m 1 database\\n+ S\u1eed d\u1ee5ng \u0111\u01b0\u1ee3c Git \u0111\u1ec3 qu\u1ea3n l\xfd source code\\n\\n[Website](https://nguyenlephong.github.io/)"}]}')}}]);